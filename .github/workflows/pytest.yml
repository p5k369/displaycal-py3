name: Tests
on:
  push
  #  types: [opened, synchronize, reopened, ready_for_review, unlabeled]
  #  branches:
  #    - develop

jobs:
  build:
    name: Test with Python ${{ matrix.python-version }} and wxPython ${{ matrix.wx-version }}
    env:
      DISPLAY: :0
    runs-on: ubuntu-22.04

    strategy:
      fail-fast: False
      matrix:
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
        wx-version:
          - "4.1.1"
          - "4.2.1"
        exclude:
          - python-version: "3.11"
            wx-version: "4.1.1"
          - python-version: "3.12"
            wx-version: "4.1.1"

    steps:

    - uses: actions/checkout@v4

    - name: Set Environment Variables
      run: |
        echo "py_version=$(echo ${{ matrix.python-version }} | tr -d .)" >> $GITHUB_ENV
        if [ "${{ matrix.python-version }}" == "3.8" ]; then
          echo "add_dir_str=${{ matrix.python-version }}" >> $GITHUB_ENV
        elif [ "${{ matrix.python-version }}" == "3.9" ]; then
          echo "add_dir_str=${{ matrix.python-version }}" >> $GITHUB_ENV
        elif [ "${{ matrix.python-version }}" == "3.10" ]; then
          echo "add_dir_str=cpython-310" >> $GITHUB_ENV
        elif [ "${{ matrix.python-version }}" == "3.11" ]; then
          echo "add_dir_str=cpython-311" >> $GITHUB_ENV
        elif [ "${{ matrix.python-version }}" == "3.12" ]; then
          echo "add_dir_str=cpython-312" >> $GITHUB_ENV
        fi

    - name: Setup xvfb
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb \
            libxkbcommon-x11-0 \
            libxcb-icccm4 \
            libxcb-image0 \
            libxcb-keysyms1 \
            libxcb-randr0 \
            libxcb-render-util0 \
            libxcb-xinerama0 \
            libxcb-xinput0 \
            libxcb-xfixes0
        # start xvfb in the background
        sudo /usr/bin/Xvfb $DISPLAY -screen 0 1280x1024x24 &

    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Update pip
      run: |
        sudo apt-get install -y $(grep -o ^[^#][[:alnum:]-]*.* "packages.list")
        python3 -m pip install --upgrade pip
        pip install wheel

    - name: Install wxPython wheels ${{ matrix.wx-version }}
      run: |
        pip install https://wxpython.p5k.org/wxPython-${{ matrix.wx-version }}-cp${{ env.py_version }}-cp${{ env.py_version }}-linux_x86_64.whl

    - name: Install Python dependencies
      run: |
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Compile C-Extensions
      run: |
        sudo chmod a+rw /etc/udev/rules.d
        python3 setup.py install
        cp ./build/lib.linux-x86_64-${{ env.add_dir_str }}/DisplayCAL/lib64/python${{ env.py_version }}/RealDisplaySizeMM.cpython-${{ env.py_version }}-x86_64-linux-gnu.so ./DisplayCAL/lib64/python${{ env.py_version }}/

    - name: Test with pytest
      run: |
        python -m pytest --verbose --cov=. --cov-report html

    - name: Archive code coverage results
      uses: actions/upload-artifact@v3
      with:
        name: code-coverage-report
        path: htmlcov
        retention-days: 10
